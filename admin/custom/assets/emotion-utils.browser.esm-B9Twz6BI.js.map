{"version":3,"file":"emotion-utils.browser.esm-B9Twz6BI.js","sources":["../../node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","../../node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js"],"sourcesContent":["import * as React from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || React.useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","var isBrowser = true;\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else if (className) {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n"],"names":["syncFallback","create","useInsertionEffect","React","useInsertionEffectAlwaysWithSyncFallback","useInsertionEffectWithLayoutFallback","React.useLayoutEffect","isBrowser","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","className","registerStyles","cache","serialized","isStringTag","insertStyles","current"],"mappings":"gGAEA,IAAIA,EAAe,SAAsBC,EAAQ,CAC/C,OAAOA,EAAQ,CACjB,EAEIC,EAAqBC,EAAM,mBAA6BA,EAAM,mBAA6B,GAC3FC,EAA2CF,GAAsBF,EACjEK,EAAuCH,GAAsBI,EAAAA,gBCR7DC,EAAY,GAEhB,SAASC,EAAoBC,EAAYC,EAAkBC,EAAY,CACrE,IAAIC,EAAe,GACnB,OAAAD,EAAW,MAAM,GAAG,EAAE,QAAQ,SAAUE,EAAW,CAC7CJ,EAAWI,CAAS,IAAM,OAC5BH,EAAiB,KAAKD,EAAWI,CAAS,EAAI,GAAG,EACxCA,IACTD,GAAgBC,EAAY,IAElC,CAAG,EACMD,CACT,CACG,IAACE,EAAiB,SAAwBC,EAAOC,EAAYC,EAAa,CAC3E,IAAIJ,EAAYE,EAAM,IAAM,IAAMC,EAAW,MAO5CC,IAAgB,IAIjBV,IAAc,KAAWQ,EAAM,WAAWF,CAAS,IAAM,SACvDE,EAAM,WAAWF,CAAS,EAAIG,EAAW,OAE7C,EACIE,EAAe,SAAsBH,EAAOC,EAAYC,EAAa,CACvEH,EAAeC,EAAOC,EAAYC,CAAW,EAC7C,IAAIJ,EAAYE,EAAM,IAAM,IAAMC,EAAW,KAE7C,GAAID,EAAM,SAASC,EAAW,IAAI,IAAM,OAAW,CACjD,IAAIG,EAAUH,EAEd,GACED,EAAM,OAAOC,IAAeG,EAAU,IAAMN,EAAY,GAAIM,EAASJ,EAAM,MAAO,EAAI,EAEtFI,EAAUA,EAAQ,WACXA,IAAY,OACzB,CACA","x_google_ignoreList":[0,1]}